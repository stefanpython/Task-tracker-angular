{"ast":null,"code":"import { of } from \"rxjs\";\nimport { TASKS } from \"../mock-tasks\";\nimport * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.apiUrl = \"http://localhost:5000/tasks\";\n  }\n  getTasks() {\n    const tasks = of(TASKS);\n    return tasks;\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["of","TASKS","TaskService","constructor","apiUrl","getTasks","tasks","_","_2","factory","ɵfac","providedIn"],"sources":["/home/mrdiscipline/angular/Task-tracker-angular/src/app/services/task.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable, of, take } from \"rxjs\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { TASKS } from \"../mock-tasks\";\nimport { Task } from \"../Task\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TaskService {\n  private apiUrl = \"http://localhost:5000/tasks\";\n\n  constructor() {}\n\n  getTasks(): Observable<Task[]> {\n    const tasks = of(TASKS);\n    return tasks;\n  }\n}\n"],"mappings":"AACA,SAAqBA,EAAE,QAAc,MAAM;AAE3C,SAASC,KAAK,QAAQ,eAAe;;AAMrC,OAAM,MAAOC,WAAW;EAGtBC,YAAA;IAFQ,KAAAC,MAAM,GAAG,6BAA6B;EAE/B;EAEfC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAGN,EAAE,CAACC,KAAK,CAAC;IACvB,OAAOK,KAAK;EACd;EAAC,QAAAC,CAAA,G;qBARUL,WAAW;EAAA;EAAA,QAAAM,EAAA,G;WAAXN,WAAW;IAAAO,OAAA,EAAXP,WAAW,CAAAQ,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}