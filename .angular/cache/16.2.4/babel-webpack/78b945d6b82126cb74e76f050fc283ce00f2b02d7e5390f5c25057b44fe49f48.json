{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class UiService {\n  constructor() {\n    this.showAddTask = false;\n    this.subject = new Subject();\n  }\n  toggleAddTask() {\n    console.log(\"123\");\n    this.showAddTask = !this.showAddTask;\n    this.subject.next(this.showAddTask);\n  }\n  onToggle() {\n    return this.subject.asObservable();\n  }\n  static #_ = this.ɵfac = function UiService_Factory(t) {\n    return new (t || UiService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UiService,\n    factory: UiService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["Subject","UiService","constructor","showAddTask","subject","toggleAddTask","console","log","next","onToggle","asObservable","_","_2","factory","ɵfac","providedIn"],"sources":["/home/mrdiscipline/angular/Task-tracker-angular/src/app/services/ui.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UiService {\n  private showAddTask: boolean = false;\n  private subject = new Subject<any>();\n\n  constructor() {}\n\n  toggleAddTask(): void {\n    console.log(\"123\");\n    this.showAddTask = !this.showAddTask;\n    this.subject.next(this.showAddTask);\n  }\n\n  onToggle(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n"],"mappings":"AACA,SAAqBA,OAAO,QAAQ,MAAM;;AAK1C,OAAM,MAAOC,SAAS;EAIpBC,YAAA;IAHQ,KAAAC,WAAW,GAAY,KAAK;IAC5B,KAAAC,OAAO,GAAG,IAAIJ,OAAO,EAAO;EAErB;EAEfK,aAAaA,CAAA;IACXC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB,IAAI,CAACJ,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;IACpC,IAAI,CAACC,OAAO,CAACI,IAAI,CAAC,IAAI,CAACL,WAAW,CAAC;EACrC;EAEAM,QAAQA,CAAA;IACN,OAAO,IAAI,CAACL,OAAO,CAACM,YAAY,EAAE;EACpC;EAAC,QAAAC,CAAA,G;qBAdUV,SAAS;EAAA;EAAA,QAAAW,EAAA,G;WAATX,SAAS;IAAAY,OAAA,EAATZ,SAAS,CAAAa,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}