{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ui.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AddTaskComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function AddTaskComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 2)(2, \"label\", 3);\n    i0.ɵɵtext(3, \"Task \");\n    i0.ɵɵelementStart(4, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.text = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 5);\n    i0.ɵɵtext(7, \"Day & Time \");\n    i0.ɵɵelementStart(8, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.day = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n    i0.ɵɵtext(11, \"Set Reminder \");\n    i0.ɵɵelementStart(12, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.reminder = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(13, \"input\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.text);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.day);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.reminder);\n  }\n}\nexport class AddTaskComponent {\n  constructor(uiService) {\n    this.uiService = uiService;\n    this.onAddTask = new EventEmitter();\n    this.reminder = false;\n    this.subscription = this.uiService.onToggle().subscribe(value => this.showAddTask = value);\n  }\n  onSubmit() {\n    if (!this.text) {\n      alert(\"Please add a task!\");\n      return;\n    }\n    const newTask = {\n      text: this.text,\n      day: this.day,\n      reminder: this.reminder\n    };\n    this.onAddTask.emit(newTask);\n    this.text = \"\";\n    this.day = \"\";\n    this.reminder = false;\n  }\n  static #_ = this.ɵfac = function AddTaskComponent_Factory(t) {\n    return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.UiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTaskComponent,\n    selectors: [[\"app-add-task\"]],\n    outputs: {\n      onAddTask: \"onAddTask\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"add-form\", 3, \"ngSubmit\", 4, \"ngIf\"], [1, \"add-form\", 3, \"ngSubmit\"], [1, \"form-control\"], [\"for\", \"text\"], [\"type\", \"text\", \"name\", \"text\", \"id\", \"text\", \"placeholder\", \"Add task\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"day\"], [\"type\", \"text\", \"name\", \"day\", \"id\", \"day\", \"placeholder\", \"Add Day & Time\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-control\", \"form-control-check\"], [\"for\", \"reminder\"], [\"type\", \"checkbox\", \"name\", \"reminder\", \"id\", \"reminder\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Save Task\", 1, \"btn\", \"btn-block\"]],\n    template: function AddTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AddTaskComponent_form_0_Template, 14, 3, \"form\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showAddTask);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","AddTaskComponent_form_0_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵtext","AddTaskComponent_form_0_Template_input_ngModelChange_4_listener","$event","ctx_r3","text","ɵɵelementEnd","AddTaskComponent_form_0_Template_input_ngModelChange_8_listener","ctx_r4","day","AddTaskComponent_form_0_Template_input_ngModelChange_12_listener","ctx_r5","reminder","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","AddTaskComponent","constructor","uiService","onAddTask","subscription","onToggle","subscribe","value","showAddTask","alert","newTask","emit","_","ɵɵdirectiveInject","i1","UiService","_2","selectors","outputs","decls","vars","consts","template","AddTaskComponent_Template","rf","ctx","ɵɵtemplate","AddTaskComponent_form_0_Template"],"sources":["/home/mrdiscipline/angular/Task-tracker-angular/src/app/components/add-task/add-task.component.ts","/home/mrdiscipline/angular/Task-tracker-angular/src/app/components/add-task/add-task.component.html"],"sourcesContent":["import { Component, Output, EventEmitter } from \"@angular/core\";\nimport { Task } from \"src/app/Task\";\nimport { UiService } from \"src/app/services/ui.service\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-add-task\",\n  templateUrl: \"./add-task.component.html\",\n  styleUrls: [\"./add-task.component.css\"],\n})\nexport class AddTaskComponent {\n  @Output() onAddTask: EventEmitter<Task> = new EventEmitter();\n  text!: string;\n  day!: string;\n  reminder: boolean = false;\n  showAddTask!: boolean;\n  subscription!: Subscription;\n\n  constructor(private uiService: UiService) {\n    this.subscription = this.uiService\n      .onToggle()\n      .subscribe((value) => (this.showAddTask = value));\n  }\n\n  onSubmit() {\n    if (!this.text) {\n      alert(\"Please add a task!\");\n      return;\n    }\n\n    const newTask = {\n      text: this.text,\n      day: this.day,\n      reminder: this.reminder,\n    };\n\n    this.onAddTask.emit(newTask);\n\n    this.text = \"\";\n    this.day = \"\";\n    this.reminder = false;\n  }\n}\n","<form *ngIf=\"showAddTask\" class=\"add-form\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-control\">\n    <label for=\"text\"\n      >Task\n      <input\n        type=\"text\"\n        name=\"text\"\n        [(ngModel)]=\"text\"\n        id=\"text\"\n        placeholder=\"Add task\"\n      />\n    </label>\n  </div>\n\n  <div class=\"form-control\">\n    <label for=\"day\"\n      >Day & Time\n      <input\n        type=\"text\"\n        name=\"day\"\n        [(ngModel)]=\"day\"\n        id=\"day\"\n        placeholder=\"Add Day & Time\"\n      />\n    </label>\n  </div>\n\n  <div class=\"form-control form-control-check\">\n    <label for=\"reminder\"\n      >Set Reminder\n      <input\n        type=\"checkbox\"\n        name=\"reminder\"\n        [(ngModel)]=\"reminder\"\n        id=\"reminder\"\n      />\n    </label>\n  </div>\n\n  <input type=\"submit\" value=\"Save Task\" class=\"btn btn-block\" />\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}