{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ui.service\";\nimport * as i2 from \"@angular/forms\";\nexport class AddTaskComponent {\n  constructor(uiService) {\n    this.uiService = uiService;\n    this.onAddTask = new EventEmitter();\n    this.reminder = false;\n    this.subscription = this.uiService.onToggle().subscribe(value => this.showAddTask = value);\n  }\n  onSubmit() {\n    if (!this.text) {\n      alert(\"Please add a task!\");\n      return;\n    }\n    const newTask = {\n      text: this.text,\n      day: this.day,\n      reminder: this.reminder\n    };\n    this.onAddTask.emit(newTask);\n    this.text = \"\";\n    this.day = \"\";\n    this.reminder = false;\n  }\n  static #_ = this.ɵfac = function AddTaskComponent_Factory(t) {\n    return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.UiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTaskComponent,\n    selectors: [[\"app-add-task\"]],\n    outputs: {\n      onAddTask: \"onAddTask\"\n    },\n    decls: 14,\n    vars: 3,\n    consts: [[1, \"add-form\", 3, \"ngSubmit\"], [1, \"form-control\"], [\"for\", \"text\"], [\"type\", \"text\", \"name\", \"text\", \"id\", \"text\", \"placeholder\", \"Add task\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"day\"], [\"type\", \"text\", \"name\", \"day\", \"id\", \"day\", \"placeholder\", \"Add Day & Time\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-control\", \"form-control-check\"], [\"for\", \"reminder\"], [\"type\", \"checkbox\", \"name\", \"reminder\", \"id\", \"reminder\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Save Task\", 1, \"btn\", \"btn-block\"]],\n    template: function AddTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddTaskComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Task \");\n        i0.ɵɵelementStart(4, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.text = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Day & Time \");\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.day = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Set Reminder \");\n        i0.ɵɵelementStart(12, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.reminder = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.text);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.day);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.reminder);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","AddTaskComponent","constructor","uiService","onAddTask","reminder","subscription","onToggle","subscribe","value","showAddTask","onSubmit","text","alert","newTask","day","emit","_","i0","ɵɵdirectiveInject","i1","UiService","_2","selectors","outputs","decls","vars","consts","template","AddTaskComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AddTaskComponent_Template_form_ngSubmit_0_listener","ɵɵtext","AddTaskComponent_Template_input_ngModelChange_4_listener","$event","ɵɵelementEnd","AddTaskComponent_Template_input_ngModelChange_8_listener","AddTaskComponent_Template_input_ngModelChange_12_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/home/mrdiscipline/angular/Task-tracker-angular/src/app/components/add-task/add-task.component.ts","/home/mrdiscipline/angular/Task-tracker-angular/src/app/components/add-task/add-task.component.html"],"sourcesContent":["import { Component, Output, EventEmitter } from \"@angular/core\";\nimport { Task } from \"src/app/Task\";\nimport { UiService } from \"src/app/services/ui.service\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n  selector: \"app-add-task\",\n  templateUrl: \"./add-task.component.html\",\n  styleUrls: [\"./add-task.component.css\"],\n})\nexport class AddTaskComponent {\n  @Output() onAddTask: EventEmitter<Task> = new EventEmitter();\n  text!: string;\n  day!: string;\n  reminder: boolean = false;\n  showAddTask!: boolean;\n  subscription!: Subscription;\n\n  constructor(private uiService: UiService) {\n    this.subscription = this.uiService\n      .onToggle()\n      .subscribe((value) => (this.showAddTask = value));\n  }\n\n  onSubmit() {\n    if (!this.text) {\n      alert(\"Please add a task!\");\n      return;\n    }\n\n    const newTask = {\n      text: this.text,\n      day: this.day,\n      reminder: this.reminder,\n    };\n\n    this.onAddTask.emit(newTask);\n\n    this.text = \"\";\n    this.day = \"\";\n    this.reminder = false;\n  }\n}\n","<form class=\"add-form\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-control\">\n    <label for=\"text\"\n      >Task\n      <input\n        type=\"text\"\n        name=\"text\"\n        [(ngModel)]=\"text\"\n        id=\"text\"\n        placeholder=\"Add task\"\n      />\n    </label>\n  </div>\n\n  <div class=\"form-control\">\n    <label for=\"day\"\n      >Day & Time\n      <input\n        type=\"text\"\n        name=\"day\"\n        [(ngModel)]=\"day\"\n        id=\"day\"\n        placeholder=\"Add Day & Time\"\n      />\n    </label>\n  </div>\n\n  <div class=\"form-control form-control-check\">\n    <label for=\"reminder\"\n      >Set Reminder\n      <input\n        type=\"checkbox\"\n        name=\"reminder\"\n        [(ngModel)]=\"reminder\"\n        id=\"reminder\"\n      />\n    </label>\n  </div>\n\n  <input type=\"submit\" value=\"Save Task\" class=\"btn btn-block\" />\n</form>\n"],"mappings":"AAAA,SAA4BA,YAAY,QAAQ,eAAe;;;;AAU/D,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,SAAoB;IAApB,KAAAA,SAAS,GAATA,SAAS;IAPnB,KAAAC,SAAS,GAAuB,IAAIJ,YAAY,EAAE;IAG5D,KAAAK,QAAQ,GAAY,KAAK;IAKvB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,SAAS,CAC/BI,QAAQ,EAAE,CACVC,SAAS,CAAEC,KAAK,IAAM,IAAI,CAACC,WAAW,GAAGD,KAAM,CAAC;EACrD;EAEAE,QAAQA,CAAA;IACN,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE;MACdC,KAAK,CAAC,oBAAoB,CAAC;MAC3B;;IAGF,MAAMC,OAAO,GAAG;MACdF,IAAI,EAAE,IAAI,CAACA,IAAI;MACfG,GAAG,EAAE,IAAI,CAACA,GAAG;MACbV,QAAQ,EAAE,IAAI,CAACA;KAChB;IAED,IAAI,CAACD,SAAS,CAACY,IAAI,CAACF,OAAO,CAAC;IAE5B,IAAI,CAACF,IAAI,GAAG,EAAE;IACd,IAAI,CAACG,GAAG,GAAG,EAAE;IACb,IAAI,CAACV,QAAQ,GAAG,KAAK;EACvB;EAAC,QAAAY,CAAA,G;qBA/BUhB,gBAAgB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,SAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhBrB,gBAAgB;IAAAsB,SAAA;IAAAC,OAAA;MAAApB,SAAA;IAAA;IAAAqB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV7BZ,EAAA,CAAAc,cAAA,cAA+C;QAAxBd,EAAA,CAAAe,UAAA,sBAAAC,mDAAA;UAAA,OAAYH,GAAA,CAAApB,QAAA,EAAU;QAAA,EAAC;QAC5CO,EAAA,CAAAc,cAAA,aAA0B;QAErBd,EAAA,CAAAiB,MAAA,YACD;QAAAjB,EAAA,CAAAc,cAAA,eAME;QAHAd,EAAA,CAAAe,UAAA,2BAAAG,yDAAAC,MAAA;UAAA,OAAAN,GAAA,CAAAnB,IAAA,GAAAyB,MAAA;QAAA,EAAkB;QAHpBnB,EAAA,CAAAoB,YAAA,EAME;QAINpB,EAAA,CAAAc,cAAA,aAA0B;QAErBd,EAAA,CAAAiB,MAAA,kBACD;QAAAjB,EAAA,CAAAc,cAAA,eAME;QAHAd,EAAA,CAAAe,UAAA,2BAAAM,yDAAAF,MAAA;UAAA,OAAAN,GAAA,CAAAhB,GAAA,GAAAsB,MAAA;QAAA,EAAiB;QAHnBnB,EAAA,CAAAoB,YAAA,EAME;QAINpB,EAAA,CAAAc,cAAA,aAA6C;QAExCd,EAAA,CAAAiB,MAAA,qBACD;QAAAjB,EAAA,CAAAc,cAAA,gBAKE;QAFAd,EAAA,CAAAe,UAAA,2BAAAO,0DAAAH,MAAA;UAAA,OAAAN,GAAA,CAAA1B,QAAA,GAAAgC,MAAA;QAAA,EAAsB;QAHxBnB,EAAA,CAAAoB,YAAA,EAKE;QAINpB,EAAA,CAAAuB,SAAA,gBAA+D;QACjEvB,EAAA,CAAAoB,YAAA,EAAO;;;QAjCCpB,EAAA,CAAAwB,SAAA,GAAkB;QAAlBxB,EAAA,CAAAyB,UAAA,YAAAZ,GAAA,CAAAnB,IAAA,CAAkB;QAalBM,EAAA,CAAAwB,SAAA,GAAiB;QAAjBxB,EAAA,CAAAyB,UAAA,YAAAZ,GAAA,CAAAhB,GAAA,CAAiB;QAajBG,EAAA,CAAAwB,SAAA,GAAsB;QAAtBxB,EAAA,CAAAyB,UAAA,YAAAZ,GAAA,CAAA1B,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}